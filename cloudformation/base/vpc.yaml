AWSTemplateFormatVersion: "2010-09-09"
Description:  This template deploys a VPC, with a pair of public and private subnets spread
  across two Availability Zones. It deploys an internet gateway, with a default
  route on the public subnets. It deploys a pair of NAT gateways (one in each AZ),
  and default routes for them in the private subnets. Based on
  "https://docs.aws.amazon.com/codebuild/latest/userguide/cloudformation-vpc-template.html"

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.1.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Join ['', ['VPC-', !Ref AWS::StackName]]
        - Key: Environment
          Value: !Ref AWS::StackName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Join ['', ['InternetGateway-', !Ref AWS::StackName]]
        - Key: Environment
          Value: !Ref AWS::StackName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: 10.1.10.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join ['', ['Subnet-Public-AZ1-', !Ref AWS::StackName]]
        - Key: Environment
          Value: !Ref AWS::StackName

  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: 10.1.11.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join ['', ['Subnet-Public-AZ2-', !Ref AWS::StackName]]
        - Key: Environment
          Value: !Ref AWS::StackName

  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: 10.1.20.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join ['', ['Subnet-Private-AZ1-', !Ref AWS::StackName]]
        - Key: Environment
          Value: !Ref AWS::StackName

  PrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: 10.1.21.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join ['', ['Subnet-Private-AZ2-', !Ref AWS::StackName]]
        - Key: Environment
          Value: !Ref AWS::StackName

  NatGatewayAttachmentA:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGatewayAttachmentB:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGatewayA:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayAttachmentA.AllocationId
      SubnetId: !Ref PublicSubnetA

  NatGatewayB:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayAttachmentB.AllocationId
      SubnetId: !Ref PublicSubnetB

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join ['', ['RouteTable-', !Ref AWS::StackName]]
        - Key: Environment
          Value: !Ref AWS::StackName

  Route:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnetA

  PublicSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnetB

  PrivateRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join ['', ['RouteTable-Private-A-', !Ref AWS::StackName]]
        - Key: Environment
          Value: !Ref AWS::StackName

  PrivateRouteA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableA
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayA

  PrivateSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTableA
      SubnetId: !Ref PrivateSubnetA

  PrivateRouteTableB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join ['', ['RouteTable-Private-B-', !Ref AWS::StackName]]
        - Key: Environment
          Value: !Ref AWS::StackName

  PrivateRouteB:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableB
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayB

  PrivateSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTableB
      SubnetId: !Ref PrivateSubnetB

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Join ['', ['sg-', AWS::StackName]]
      GroupDescription: !Join ['', ["Security group for ", !Ref AWS::StackName]]
      VpcId: !Ref VPC

Outputs:
  VPC:
    Description: The stack's VPC
    Value: !Ref VPC

  PublicSubnetA:
    Description: Public Subnet in AZ1
    Value: !Ref PublicSubnetA

  PublicSubnetB:
    Description: Public Subnet in AZ2
    Value: !Ref PublicSubnetB

  PublicSubnets:
    Description: A list of the VPC's public subnets
    Value: !Join [ ",", [ !Ref PublicSubnetA, !Ref PublicSubnetB ]]

  PrivateSubnetA:
    Description: Private Subnet in AZ1
    Value: !Ref PrivateSubnetA

  PrivateSubnetB:
    Description: Private Subnet in AZ2
    Value: !Ref PrivateSubnetB

  PrivateSubnets:
    Description: A list of the VPC's private subnets
    Value: !Join [ ",", [ !Ref PrivateSubnetA, !Ref PrivateSubnetB ]]

  SecurityGroup:
    Description: Security Group for VPC
    Value: !Ref SecurityGroup